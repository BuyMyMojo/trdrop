name: (Windows x64) build, test and publish an archive

on: 
  push:
    branches: [ v2 ]
  pull_request:
    branches: [ v2 ]

jobs:
  build-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get short SHA and setup library versions in environment variables
        run: |
          echo "SHORT_SHA=$($env:GITHUB_SHA.SubString(0,7))" >> $env:GITHUB_ENV
          echo QT_VERSION=5.15.2 >> $env:GITHUB_ENV
          echo FFMPEG_VERSION=4.4.1 >> $env:GITHUB_ENV

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: C:\Qt
          key: ${{ runner.os }}-Qt-${{ env.QT_VERSION }}-cache
 
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          version: ${{ env.QT_VERSION }}
          arch: win64_mingw81
          dir: C:\
          tools: tools_ifw,4.1.1,qt.tools.ifw.41 tools_qtcreator,5.0.2-0,qt.tools.qtcreator,qt.tools.

      - name: Cache FFMPEG
        id: cache-ffmpeg
        uses: actions/cache@v1
        with:
          path: C:\ffmpeg-source
          key: ${{ runner.os }}-ffmpeg-${{ env.FFMPEG_VERSION }}-cache

      - name: Download FFMPEG libraries
        shell: powershell
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        run: |
          mkdir c:\ffmpeg-archive
          (new-object System.Net.WebClient).DownloadFile( 'https://github.com/GyanD/codexffmpeg/releases/download/4.4.1/ffmpeg-4.4.1-full_build-shared.7z', 'c:\ffmpeg-archive\ffmpeg-4.4.1-full_build-shared.7z')
          7z.exe x c:\ffmpeg-archive\ffmpeg-4.4.1-full_build-shared.7z "-oc:\ffmpeg-source" -y

      - name: Add Qt, MinGW and FFMPEG to the environment
        run: |
          $QT_VERSION1=$env:QT_VERSION
          echo QT_PATH="C:\Qt" >> $env:GITHUB_ENV
          echo MINGW64_BINARY_PATH="C:\msys64\mingw64\bin" >> $env:GITHUB_ENV
          echo FFMPEG_SOURCE="C:\ffmpeg-source\ffmpeg-4.4.1-full_build-shared" >> $env:GITHUB_ENV
          echo FFMPEG_SOURCE_BIN="C:\ffmpeg-source\ffmpeg-4.4.1-full_build-shared\bin" >> $env:GITHUB_ENV
          echo TRDROP_TEST_VIDEO_DIRECTORY="C:\trdrop\test-videos" >> $env:GITHUB_ENV

      - name: Compile
        run: |
          mkdir shadow-build
          cd shadow-build
          qmake.exe -o Makefile ..\trdrop\trdrop.pro -spec win32-g++ "CONFIG+=qtquickcompiler" "OBJECTS_DIR=C:\build_temp" "MOC_DIR=C:\build_temp"
          mingw32-make -f Makefile

      - name: Run tests
        id: run-windows-tests
        run: |
          cd build\windows\gcc\x64\release
          .\trdrop-tests.exe

      - name: Publish unit test results
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: build/windows/gcc/x64/release/*.xml
          exclude_sources: shadow-build

      # - name: Upload unit test results
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: test-logs-${{ env.SHORT_SHA }}
      #     path: build/windows/gcc/x64/release/*.xml

      - name: Prepare trdrop for artifact
        if: startsWith(github.event.head_commit.message, 'Release')
        run: |
          cd ${env:MINGW64_BINARY_PATH}
          copy-item libgcc_s_seh-1.dll, libstdc++-6.dll, libwinpthread-1.dll, libgomp-1.dll ${env:GITHUB_WORKSPACE}\build\windows\gcc\x64\release
          cd ${env:FFMPEG_SOURCE_BIN}
          copy-item avcodec-58.dll, avdevice-58.dll, avfilter-7.dll, avformat-58.dll, avutil-56.dll, postproc-55.dll, swresample-3.dll, swscale-5.dll ${env:GITHUB_WORKSPACE}\build\windows\gcc\x64\release
          cd ${env:GITHUB_WORKSPACE}
          rm ${env:GITHUB_WORKSPACE}\build\windows\gcc\x64\release\trdrop-tests.exe
          windeployqt --qmldir trdrop\trdrop-ui\views ${env:GITHUB_WORKSPACE}\build\windows\gcc\x64\release

      # TODO: Cleanup release builds. It is very bloated rn.
      - name: Upload artifact
        uses: actions/upload-artifact@v2 
        if: startsWith(github.event.head_commit.message, 'Release')
        with:
          name: trdrop-v2-dev-${{ env.SHORT_SHA }}
          path: |
            build\windows\gcc\x64\release\
          if-no-files-found: error

